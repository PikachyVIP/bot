import discord
from discord.ext import commands
from discord.ui import Select, View
import mysql.connector
from datetime import datetime
from mysql.connector import Error
from data import mysqlconf

import Main

MYSQL_CONFIG = mysqlconf



class VoiceSystem:
    def __init__(self):
        self.channel_prefix = "üîä‚îÇ"

    async def get_db_connection(self):
        try:
            return mysql.connector.connect(**MYSQL_CONFIG)
        except Error as e:
            print(f"MySQL Error: {e}")
            return None

    async def get_voice_settings(self, guild_id):
        conn = await self.get_db_connection()
        if not conn:
            return None

        try:
            cursor = conn.cursor(dictionary=True)
            cursor.execute("""
                SELECT category_id, trigger_channel_id 
                FROM voice_system 
                WHERE guild_id = %s
            """, (guild_id,))
            return cursor.fetchone()
        finally:
            if conn.is_connected():
                conn.close()

    async def save_voice_settings(self, guild_id, category_id, trigger_channel_id):
        conn = await self.get_db_connection()
        if not conn:
            return

        try:
            cursor = conn.cursor()
            cursor.execute("""
                INSERT INTO voice_system (guild_id, category_id, trigger_channel_id, created_at)
                VALUES (%s, %s, %s, %s)
                ON DUPLICATE KEY UPDATE
                category_id = VALUES(category_id),
                trigger_channel_id = VALUES(trigger_channel_id)
            """, (guild_id, category_id, trigger_channel_id, datetime.now()))
            conn.commit()
        finally:
            if conn.is_connected():
                conn.close()


async def setup(bot: commands.Bot):
    system = VoiceSystem()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    conn = await system.get_db_connection()
    if conn:
        try:
            cursor = conn.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS voice_system (
                    guild_id BIGINT PRIMARY KEY,
                    category_id BIGINT NOT NULL,
                    trigger_channel_id BIGINT NOT NULL,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                )
            """)
            conn.commit()
        except Error as e:
            print(f"MySQL Error: {e}")
        finally:
            if conn.is_connected():
                conn.close()

    @bot.tree.command(name="install_multivoice", description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    async def install_multivoice(interaction: discord.Interaction):

        if not await Main.check_command_access_app(interaction):
            return await interaction.response.send_message(
                "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                ephemeral=True
            )

        try:
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = await interaction.guild.create_category(
                name="[üîí] –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                position=0)

            # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª –ù–ê –°–ê–ú–û–ú –í–ï–†–•–£ (–ø–æ–∑–∏—Ü–∏—è 0)
            trigger_channel = await category.create_voice_channel(
                name="‚îè[‚ûï]‚îìüîí–°–æ–∑–¥–∞—Ç—å",
                position=0)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            await system.save_voice_settings(interaction.guild.id, category.id, trigger_channel.id)

            await interaction.response.send_message(
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞! –ó–∞–π–¥–∏—Ç–µ –≤ –≤–µ—Ä—Ö–Ω–∏–π –∫–∞–Ω–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.",
                ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞: {e}",
                ephemeral=True)

    @bot.event
    async def on_voice_state_update(member, before, after):
        settings = await system.get_voice_settings(member.guild.id)
        if not settings:
            return

        try:
            # 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª
            if after.channel and after.channel.id == settings['trigger_channel_id']:
                category = member.guild.get_channel(settings['category_id'])
                if not category:
                    return

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–∞
                trigger_channel = member.guild.get_channel(settings['trigger_channel_id'])
                trigger_position = trigger_channel.position

                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –ü–û–î —Ç—Ä–∏–≥–≥–µ—Ä–æ–º (–ø–æ–∑–∏—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ + 1)
                new_channel = await category.create_voice_channel(
                    name=f"{system.channel_prefix}{member.display_name}",
                    position=trigger_position + 1  # –ü–æ–∑–∏—Ü–∏—è —Å—Ä–∞–∑—É –ø–æ–¥ —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
                )
                await member.move_to(new_channel)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed –≤ —á–∞—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
                embed = discord.Embed(
                    title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º",
                    description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                    color=discord.Color.blue()
                )
                view = ChannelControlView(new_channel, member)
                await new_channel.send(embed=embed, view=view)

            # 2. –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
            if (before.channel
                    and before.channel.category_id == settings['category_id']
                    and before.channel.id != settings['trigger_channel_id']
                    and len(before.channel.members) == 0):

                try:
                    await before.channel.delete()
                except:
                    pass

        except Exception as e:
            print(f"Voice System Error: {e}")


class ChannelControlView(View):
    def __init__(self, voice_channel, owner):
        super().__init__(timeout=None)
        self.voice_channel = voice_channel
        self.owner = owner

        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –º–µ–Ω—é
        options = [
            discord.SelectOption(label="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", value="rename", emoji="‚úèÔ∏è"),
            discord.SelectOption(label="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value="limit", emoji="üë•"),
          #  discord.SelectOption(label="–ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", value="lock", emoji="üîí"),
          #  discord.SelectOption(label="–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", value="unlock", emoji="üîì"),
          #  discord.SelectOption(label="–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Ä–µ–∂–∏–º", value="ghost", emoji="üëª"),
          #  discord.SelectOption(label="–í–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º", value="unghost", emoji="üëÄ"),
           # discord.SelectOption(label="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", value="invite", emoji="‚úâÔ∏è"),
          #  discord.SelectOption(label="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å", value="status", emoji="üìù")
        ]

        self.select = Select(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ...",
            options=options
        )
        self.select.callback = self.on_select
        self.add_item(self.select)

    async def on_select(self, interaction):
        if interaction.user != self.owner:
            await interaction.response.send_message("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!", ephemeral=True)
            return

        value = self.select.values[0]

        if value == "rename":
            await interaction.response.send_modal(RenameModal(self.voice_channel))

        elif value == "limit":
            await interaction.response.send_modal(LimitModal(self.voice_channel))

        elif value == "lock":
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤
            await self.voice_channel.set_permissions(
                interaction.guild.default_role,
                connect=False,
                view_channel=True  # –ö–∞–Ω–∞–ª –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∏–¥–∏–º—ã–º
            )
            await interaction.response.send_message("üîí –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!", ephemeral=True)

        elif value == "unlock":
            await self.voice_channel.set_permissions(
                interaction.guild.default_role,
                connect=True
            )
            await interaction.response.send_message("üîì –ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!", ephemeral=True)

        elif value == "ghost":
            # –í–∫–ª—é—á–∞–µ–º –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Ä–µ–∂–∏–º (–≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
            await self.voice_channel.set_permissions(
                interaction.guild.default_role,
                view_channel=False
            )
            await interaction.response.send_message("üëª –ö–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!", ephemeral=True)

        elif value == "unghost":
            await self.voice_channel.set_permissions(
                interaction.guild.default_role,
                view_channel=True
            )
            await interaction.response.send_message("üëÄ –ö–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –≤–∏–¥–µ–Ω –≤—Å–µ–º!", ephemeral=True)

        elif value == "invite":
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
            invite = await self.voice_channel.create_invite(max_uses=1)
            try:
                await self.owner.send(f"üé´ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª: {invite.url}")
                await interaction.response.send_message("‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –õ–°!", ephemeral=True)
            except:
                await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏!",
                                                        ephemeral=True)

        elif value == "status":
            await interaction.response.send_modal(StatusModal(self.voice_channel))


class StatusModal(discord.ui.Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞")
        self.voice_channel = voice_channel
        self.status = discord.ui.TextInput(
            label="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤)",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≥—Ä–∞–µ–º –≤ Valorant",
            max_length=100
        )
        self.add_item(self.status)

    async def on_submit(self, interaction):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        original_name = self.voice_channel.name.split('|')[0].strip()
        await self.voice_channel.edit(name=f"{original_name} | {self.status.value}")
        await interaction.response.send_message(f"üìù –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.status.value}", ephemeral=True)

class RenameModal(discord.ui.Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª")
        self.voice_channel = voice_channel
        self.new_name = discord.ui.TextInput(
            label="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
            placeholder=f"–¢–µ–∫—É—â–µ–µ: {voice_channel.name}",
            max_length=100
        )
        self.add_item(self.new_name)

    async def on_submit(self, interaction):
        await self.voice_channel.edit(name=self.new_name.value)
        await interaction.response.send_message(
            f"‚úÖ –ö–∞–Ω–∞–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤: {self.new_name.value}",
            ephemeral=True
        )


class LimitModal(discord.ui.Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        self.voice_channel = voice_channel
        self.limit = discord.ui.TextInput(
            label="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (0 = –±–µ–∑ –ª–∏–º–∏—Ç–∞)",
            placeholder=f"–¢–µ–∫—É—â–µ–µ: {voice_channel.user_limit or '–±–µ–∑ –ª–∏–º–∏—Ç–∞'}",
            max_length=2
        )
        self.add_item(self.limit)

    async def on_submit(self, interaction):
        try:
            limit = max(0, min(99, int(self.limit.value)))
            await self.voice_channel.edit(user_limit=limit)
            await interaction.response.send_message(
                f"‚úÖ –õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {limit if limit > 0 else '–±–µ–∑ –ª–∏–º–∏—Ç–∞'}",
                ephemeral=True
            )
        except ValueError:
            await interaction.response.send_message(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99",
                ephemeral=True
            )