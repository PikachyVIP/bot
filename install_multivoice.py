import discord
from discord.ext import commands
from discord.ui import Select, View
import mysql.connector
from mysql.connector import Error
from datetime import datetime
from data import mysqlconf

# –ö–æ–Ω—Ñ–∏–≥ MySQL (–≤–æ–∑—å–º–∏—Ç–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
MYSQL_CONFIG = mysqlconf



class ChannelSettingsMenu(View):
    def __init__(self, voice_channel):
        super().__init__(timeout=None)
        self.voice_channel = voice_channel

        options = [
            discord.SelectOption(label="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", value="rename", emoji="‚úèÔ∏è"),
            discord.SelectOption(label="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value="limit", emoji="üë•"),
            discord.SelectOption(label="–ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", value="lock", emoji="üîí"),
            discord.SelectOption(label="–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", value="unlock", emoji="üîì"),
        ]

        self.select = Select(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É...",
            options=options
        )
        self.select.callback = self.on_select
        self.add_item(self.select)

    async def on_select(self, interaction):
        if interaction.user not in self.voice_channel.members:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        value = self.select.values[0]
        if value == "rename":
            modal = RenameModal(self.voice_channel)
            await interaction.response.send_modal(modal)
        elif value == "limit":
            modal = LimitModal(self.voice_channel)
            await interaction.response.send_modal(modal)
        elif value == "lock":
            await self.voice_channel.set_permissions(interaction.guild.default_role, connect=False)
            await interaction.response.send_message("üîí –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç!", ephemeral=True)
        elif value == "unlock":
            await self.voice_channel.set_permissions(interaction.guild.default_role, connect=True)
            await interaction.response.send_message("üîì –ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç!", ephemeral=True)


class RenameModal(discord.ui.Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è")
        self.voice_channel = voice_channel
        self.new_name = discord.ui.TextInput(
            label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
            placeholder=f"–¢–µ–∫—É—â–µ–µ: {voice_channel.name}",
            max_length=100
        )
        self.add_item(self.new_name)

    async def on_submit(self, interaction):
        await self.voice_channel.edit(name=self.new_name.value)
        await interaction.response.send_message(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {self.new_name.value}", ephemeral=True)


class LimitModal(discord.ui.Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        self.voice_channel = voice_channel
        self.limit = discord.ui.TextInput(
            label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (0 = –±–µ–∑ –ª–∏–º–∏—Ç–∞)",
            placeholder=f"–¢–µ–∫—É—â–µ–µ: {voice_channel.user_limit or '–±–µ–∑ –ª–∏–º–∏—Ç–∞'}",
            max_length=2
        )
        self.add_item(self.limit)

    async def on_submit(self, interaction):
        try:
            limit = int(self.limit.value)
            await self.voice_channel.edit(user_limit=max(0, min(99, limit)))
            msg = "‚úÖ –õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: " + (f"{limit}" if limit > 0 else "–±–µ–∑ –ª–∏–º–∏—Ç–∞")
            await interaction.response.send_message(msg, ephemeral=True)
        except ValueError:
            await interaction.response.send_message("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99", ephemeral=True)


class VoiceSystem:
    def __init__(self):
        self.channel_prefix = "üîä‚îÇ"

    async def get_voice_settings(self, guild_id):
        """–ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            conn = mysql.connector.connect(**MYSQL_CONFIG)
            cursor = conn.cursor(dictionary=True)
            cursor.execute("""
                SELECT category_id, trigger_channel_id 
                FROM voice_system 
                WHERE guild_id = %s
            """, (guild_id,))
            return cursor.fetchone()
        except Error as e:
            print(f"MySQL Error: {e}")
            return None
        finally:
            if conn.is_connected():
                conn.close()

    async def save_voice_settings(self, guild_id, category_id, trigger_channel_id):
        """–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        try:
            conn = mysql.connector.connect(**MYSQL_CONFIG)
            cursor = conn.cursor()
            cursor.execute("""
                INSERT INTO voice_system (guild_id, category_id, trigger_channel_id, created_at)
                VALUES (%s, %s, %s, %s)
                ON DUPLICATE KEY UPDATE
                category_id = VALUES(category_id),
                trigger_channel_id = VALUES(trigger_channel_id)
            """, (guild_id, category_id, trigger_channel_id, datetime.now()))
            conn.commit()
        except Error as e:
            print(f"MySQL Error: {e}")
        finally:
            if conn.is_connected():
                conn.close()


async def setup(bot: commands.Bot):
    system = VoiceSystem()

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        conn = mysql.connector.connect(**MYSQL_CONFIG)
        cursor = conn.cursor()
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS voice_system (
                guild_id BIGINT PRIMARY KEY,
                category_id BIGINT NOT NULL,
                trigger_channel_id BIGINT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )
        """)
        conn.commit()
    except Error as e:
        print(f"MySQL Error: {e}")
    finally:
        if conn.is_connected():
            conn.close()

    @bot.tree.command(name="install_multivoice", description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    async def install_multivoice(interaction: discord.Interaction):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º ID –≤ –ë–î"""
        try:
            # –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = await interaction.guild.create_category(
                name="[üîí] –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                position=0)

            # –°–æ–∑–¥–∞—ë–º —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª (–í–ù–ò–ó–£ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
            trigger_channel = await category.create_voice_channel(
                name="‚îè[‚ûï]‚îìüîí–°–æ–∑–¥–∞—Ç—å",
                position=1)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            await system.save_voice_settings(interaction.guild.id, category.id, trigger_channel.id)

            await interaction.response.send_message(
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞! –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∏–∂–Ω–∏–π –∫–∞–Ω–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.",
                ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞: {e}",
                ephemeral=True)

    @bot.event
    async def on_voice_state_update(member, before, after):
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î
        settings = await system.get_voice_settings(member.guild.id)
        if not settings:
            return

        try:
            # 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª
            if after.channel and after.channel.id == settings['trigger_channel_id']:
                category = member.guild.get_channel(settings['category_id'])
                if not category:
                    return

                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –ü–û–î —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
                new_channel = await category.create_voice_channel(
                    name=f"{system.channel_prefix}{member.display_name}",
                    position=len(category.channels)
                )
                await member.move_to(new_channel)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —á–∞—Ç
                text_channel = discord.utils.get(member.guild.text_channels, name="–æ–±—â–∏–π")  # –ò–ª–∏ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª
                if text_channel:
                    embed = discord.Embed(
                        title=f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º {new_channel.name}",
                        description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                        color=discord.Color.blue()
                    )
                    await text_channel.send(
                        content=f"{member.mention}, –≤–æ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º –∫–∞–Ω–∞–ª–æ–º:",
                        embed=embed,
                        view=ChannelSettingsMenu(new_channel)
                    )

            # 2. –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
            if (before.channel
                    and before.channel.category_id == settings['category_id']
                    and before.channel.id != settings['trigger_channel_id']
                    and before.channel.name.startswith(system.channel_prefix)
                    and len(before.channel.members) == 0):
                await before.channel.delete()

        except Exception as e:
            print(f"Voice System Error: {e}")