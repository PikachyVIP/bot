import discord
from discord.ext import commands
import mysql.connector
from mysql.connector import Error
from datetime import datetime
from data import mysqlconf

# –ö–æ–Ω—Ñ–∏–≥ MySQL (–≤–æ–∑—å–º–∏—Ç–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
MYSQL_CONFIG = mysqlconf


class VoiceSystem:
    def __init__(self):
        self.channel_prefix = "üîä‚îÇ"

    async def get_voice_settings(self, guild_id):
        """–ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            conn = mysql.connector.connect(**MYSQL_CONFIG)
            cursor = conn.cursor(dictionary=True)
            cursor.execute("""
                SELECT category_id, trigger_channel_id 
                FROM voice_system 
                WHERE guild_id = %s
            """, (guild_id,))
            return cursor.fetchone()
        except Error as e:
            print(f"MySQL Error: {e}")
            return None
        finally:
            if conn.is_connected():
                conn.close()

    async def save_voice_settings(self, guild_id, category_id, trigger_channel_id):
        """–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        try:
            conn = mysql.connector.connect(**MYSQL_CONFIG)
            cursor = conn.cursor()
            cursor.execute("""
                INSERT INTO voice_system (guild_id, category_id, trigger_channel_id, created_at)
                VALUES (%s, %s, %s, %s)
                ON DUPLICATE KEY UPDATE
                category_id = VALUES(category_id),
                trigger_channel_id = VALUES(trigger_channel_id)
            """, (guild_id, category_id, trigger_channel_id, datetime.now()))
            conn.commit()
        except Error as e:
            print(f"MySQL Error: {e}")
        finally:
            if conn.is_connected():
                conn.close()


async def setup(bot: commands.Bot):
    system = VoiceSystem()

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        conn = mysql.connector.connect(**MYSQL_CONFIG)
        cursor = conn.cursor()
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS voice_system (
                guild_id BIGINT PRIMARY KEY,
                category_id BIGINT NOT NULL,
                trigger_channel_id BIGINT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )
        """)
        conn.commit()
    except Error as e:
        print(f"MySQL Error: {e}")
    finally:
        if conn.is_connected():
            conn.close()

    @bot.tree.command(name="install_multivoice", description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    async def install_multivoice(interaction: discord.Interaction):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º ID –≤ –ë–î"""
        try:
            # –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = await interaction.guild.create_category(
                name="[üîí] –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
                position=0)

            # –°–æ–∑–¥–∞—ë–º —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª (–í–ù–ò–ó–£ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
            trigger_channel = await category.create_voice_channel(
                name="‚îè[‚ûï]‚îìüîí–°–æ–∑–¥–∞—Ç—å",
                position=1)  # –ü–æ–∑–∏—Ü–∏—è 1 (–ø–æ—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥—Ä—É–≥–∏—Ö –∫–∞–Ω–∞–ª–æ–≤)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            await system.save_voice_settings(interaction.guild.id, category.id, trigger_channel.id)

            await interaction.response.send_message(
                "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞! –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∏–∂–Ω–∏–π –∫–∞–Ω–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.",
                ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞: {e}",
                ephemeral=True)

    @bot.event
    async def on_voice_state_update(member, before, after):
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î
        settings = await system.get_voice_settings(member.guild.id)
        if not settings:
            return

        try:
            # 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª
            if after.channel and after.channel.id == settings['trigger_channel_id']:
                category = member.guild.get_channel(settings['category_id'])
                if not category:
                    return

                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –ü–û–î —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
                new_channel = await category.create_voice_channel(
                    name=f"{system.channel_prefix}{member.display_name}",
                    position=len(category.channels)  # –í —Å–∞–º—ã–π –Ω–∏–∑
                )
                await member.move_to(new_channel)

            # 2. –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ)
            if (before.channel
                    and before.channel.category_id == settings['category_id']
                    and before.channel.id != settings['trigger_channel_id']
                    and before.channel.name.startswith(system.channel_prefix)
                    and len(before.channel.members) == 0):
                await before.channel.delete()

        except Exception as e:
            print(f"Voice System Error: {e}")