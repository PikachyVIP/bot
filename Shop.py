import discord
from discord.ext import commands
from discord import app_commands
import mysql.connector
from data import mysqlconf


class EventCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db_connection = mysql.connector.connect(
            host=mysqlconf.host,
            user=mysqlconf.user,
            password=mysqlconf.password,
            database=mysqlconf.database
        )

        # –°–ª–æ–≤–∞—Ä—å —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ –∏ –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å—é (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
        self.shop_roles = {
            "‚úî": {"price": 1000, "description": "TESTROLE"}
        }

    async def get_user_xp(self, user_id):
        cursor = self.db_connection.cursor(dictionary=True)
        cursor.execute("SELECT xp FROM user_levels WHERE user_id = %s", (user_id,))
        result = cursor.fetchone()
        return result['xp'] if result else 0

    async def update_user_xp(self, user_id, amount):
        cursor = self.db_connection.cursor()
        cursor.execute(
            "UPDATE user_levels SET xp = xp - %s WHERE user_id = %s",
            (amount, user_id)
        )
        self.db_connection.commit()

    @app_commands.command(name="shop", description="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π –∑–∞ XP")
    async def shop_command(self, interaction: discord.Interaction):
        # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π)
        await interaction.response.defer(ephemeral=True)
        try:
            await interaction.delete_original_response()
        except:
            pass

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_xp = await self.get_user_xp(interaction.user.id)

        # –°–æ–∑–¥–∞–µ–º Embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞–≥–∞–∑–∏–Ω–µ
        embed = discord.Embed(
            title="üè™ –ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π",
            description=f"–í–∞—à –±–∞–ª–∞–Ω—Å: **{user_xp} XP**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏:",
            color=discord.Color.gold()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏ –≤ Embed
        for role_name, data in self.shop_roles.items():
            embed.add_field(
                name=f"{role_name} - {data['price']} XP",
                value=data['description'],
                inline=False
            )

        # –°–æ–∑–¥–∞–µ–º View —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º —Ä–æ–ª–µ–π
        view = discord.ui.View()

        # –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å —Ä–æ–ª—è–º–∏
        role_select = discord.ui.Select(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏",
            options=[
                discord.SelectOption(
                    label=f"{role_name} ({data['price']} XP)",
                    value=role_name,
                    description=data['description']
                ) for role_name, data in self.shop_roles.items()
            ]
        )

        async def select_callback(interaction: discord.Interaction):
            selected_role_name = role_select.values[0]
            role_data = self.shop_roles[selected_role_name]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            target_role = discord.utils.get(interaction.guild.roles, name=selected_role_name)
            if not target_role:
                return await interaction.response.send_message(
                    f"–†–æ–ª—å {selected_role_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!",
                    ephemeral=True
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
            if user_xp < role_data['price']:
                return await interaction.response.send_message(
                    f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ XP! –ù—É–∂–Ω–æ {role_data['price']} XP, —É –≤–∞—Å {user_xp} XP.",
                    ephemeral=True
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∞ —Ä–æ–ª—å
            if target_role in interaction.user.roles:
                return await interaction.response.send_message(
                    f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å {target_role.mention}!",
                    ephemeral=True
                )

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
            confirm_embed = discord.Embed(
                title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏",
                description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å {target_role.mention} –∑–∞ {role_data['price']} XP?",
                color=discord.Color.blue()
            )

            confirm_view = discord.ui.View()

            # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_button = discord.ui.Button(
                label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                style=discord.ButtonStyle.green
            )

            async def confirm_callback(interaction: discord.Interaction):
                # –°–ø–∏—Å—ã–≤–∞–µ–º XP
                await self.update_user_xp(interaction.user.id, role_data['price'])

                # –í—ã–¥–∞–µ–º —Ä–æ–ª—å
                await interaction.user.add_roles(target_role)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                success_embed = discord.Embed(
                    title="–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!",
                    description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å {target_role.mention} –∑–∞ {role_data['price']} XP!",
                    color=discord.Color.green()
                )
                await interaction.response.edit_message(embed=success_embed, view=None)

            confirm_button.callback = confirm_callback
            confirm_view.add_item(confirm_button)

            # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
            cancel_button = discord.ui.Button(
                label="–û—Ç–º–µ–Ω–∞",
                style=discord.ButtonStyle.red
            )

            async def cancel_callback(interaction: discord.Interaction):
                await interaction.response.edit_message(
                    content="–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                    embed=None,
                    view=None
                )

            cancel_button.callback = cancel_callback
            confirm_view.add_item(cancel_button)

            await interaction.response.send_message(
                embed=confirm_embed,
                view=confirm_view,
                ephemeral=True
            )

        role_select.callback = select_callback
        view.add_item(role_select)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞
        await interaction.followup.send(embed=embed, view=view, ephemeral=True)

    def cog_unload(self):
        self.db_connection.close()


async def setup(bot):
    await bot.add_cog(EventCommands(bot))