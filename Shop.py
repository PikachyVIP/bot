import discord
from discord.ext import commands
from discord import app_commands
import mysql.connector
from mysql.connector import Error
from data import mysqlconf



class Shop(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.MYSQL_CONFIG = mysqlconf

        self.shop_roles = {
            "‚úî": {"price": 1000, "description": "—Ç–µ—Å—Ç—Ä–æ–ª—å"}
        }

    def get_db_connection(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            return mysql.connector.connect(**self.MYSQL_CONFIG)
        except Error as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL: {e}")
            return None

    async def get_user_xp(self, user_id):
        """–ü–æ–ª—É—á–∞–µ—Ç XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        conn = self.get_db_connection()
        if not conn:
            return 0

        try:
            cursor = conn.cursor(dictionary=True)
            cursor.execute("SELECT xp FROM user_levels WHERE user_id = %s", (user_id,))
            result = cursor.fetchone()
            return result['xp'] if result else 0
        except Error as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ XP: {e}")
            return 0
        finally:
            if conn and conn.is_connected():
                conn.close()

    @app_commands.command(name="shop", description="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π –∑–∞ XP")
    async def shop_command(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /shop"""
        await interaction.response.defer(ephemeral=True)
        try:
            await interaction.delete_original_response()
        except:
            pass

        user_xp = await self.get_user_xp(interaction.user.id)

        embed = discord.Embed(
            title="üè™ –ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π",
            description=f"–í–∞—à –±–∞–ª–∞–Ω—Å: **{user_xp} XP**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏:",
            color=discord.Color.gold()
        )

        for role_name, data in self.shop_roles.items():
            embed.add_field(
                name=f"{role_name} - {data['price']} XP",
                value=data['description'],
                inline=False
            )

        view = discord.ui.View(timeout=None)
        role_select = discord.ui.Select(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏",
            options=[
                discord.SelectOption(
                    label=f"{role_name} ({data['price']} XP)",
                    value=role_name,
                    description=data['description']
                ) for role_name, data in self.shop_roles.items()
            ]
        )

        async def select_callback(interaction: discord.Interaction):
            selected_role_name = role_select.values[0]
            role_data = self.shop_roles[selected_role_name]

            target_role = discord.utils.get(interaction.guild.roles, name=selected_role_name)
            if not target_role:
                return await interaction.response.send_message(
                    f"–†–æ–ª—å {selected_role_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!",
                    ephemeral=True
                )

            if user_xp < role_data['price']:
                return await interaction.response.send_message(
                    f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ XP! –ù—É–∂–Ω–æ {role_data['price']} XP, —É –≤–∞—Å {user_xp} XP.",
                    ephemeral=True
                )

            if target_role in interaction.user.roles:
                return await interaction.response.send_message(
                    f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å {target_role.mention}!",
                    ephemeral=True
                )

            confirm_embed = discord.Embed(
                title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏",
                description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å —Ä–æ–ª—å {target_role.mention} –∑–∞ {role_data['price']} XP?",
                color=discord.Color.blue()
            )

            confirm_view = discord.ui.View()

            confirm_button = discord.ui.Button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", style=discord.ButtonStyle.green)
            cancel_button = discord.ui.Button(label="–û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.red)

            async def confirm_callback(interaction: discord.Interaction):
                if await self.update_user_xp(interaction.user.id, role_data['price']):
                    await interaction.user.add_roles(target_role)
                    success_embed = discord.Embed(
                        title="–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!",
                        description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å {target_role.mention} –∑–∞ {role_data['price']} XP!",
                        color=discord.Color.green()
                    )
                    await interaction.response.edit_message(embed=success_embed, view=None)
                else:
                    await interaction.response.send_message(
                        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ XP. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                        ephemeral=True
                    )

            confirm_button.callback = confirm_callback
            confirm_view.add_item(confirm_button)

            async def cancel_callback(interaction: discord.Interaction):
                await interaction.response.edit_message(
                    content="–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                    embed=None,
                    view=None
                )

            cancel_button.callback = cancel_callback
            confirm_view.add_item(cancel_button)

            await interaction.response.send_message(
                embed=confirm_embed,
                view=confirm_view,
                ephemeral=True
            )

        role_select.callback = select_callback
        view.add_item(role_select)

        await interaction.followup.send(embed=embed, view=view, ephemeral=True)

    @classmethod
    async def setup(cls, bot):
        await bot.add_cog(cls(bot))